name: Main workflow

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    name: Build Docker images and push them to DockerHub
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - image_name: valeevilja/cppbot:v1
            dockerfile: Dockerfile
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: Login to Docker Hub
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image_name }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  
  deploy:
    name: Deploy to server
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script: |
          sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/cppbot:v1
          sudo docker-compose down
          touch .env
          echo BOT_TOKEN=${{ secrets.BOT_TOKEN }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
          echo POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} >> .env
          echo POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} >> .env
          echo ADMIN_CHAT_ID=${{ secrets.ADMIN_CHAT_ID }} >> .env
          sudo docker-compose up -d --build
  
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!